<script src="/js/setup.js"></script>

<div id="tabs">
	<!-- main app canvas page 1 -->
	<div id='videoSetup'>

		<!-- control panel -->
		<div id="videoListBox">
			<h3>Video List</h3>
			<div>
				<div class="buttonPanel">
					<button id="uploadButton" >Add Video</button>
				</div>
				<div class="imgGrid">
			<ul id="availableVideosToBranch">
			<%  
				id=1;
				app.locals.videoA.each(function(video){ 
				 %>
				 <li vidId="<%= id %>"> 
				 	<img class="videoListThumbnail" src="/image/A/<%= id %>A.png" />
				 </li>
				<% 
				id++
				 });
			%>
			</ul>
				</div>
			</div>

			<h3>Hotspot Linking Tools</h3>
			<div>
				<div class="buttonPanel">		
				<button id="save">Save Hotspots</button>
				<button id="clear" >Clear Hotspots</button>
				</div>
			</div>
		</div> <!-- /videoListBox -->
		<div id="canvas">
		</div>
	</div><!-- /page 1 -->

	<!-- video selection dialog for linking hotspots -->
	<div title="Select Next Video" id="dialog">
		<div class="imgGrid">
			<ul id="thumbnailsForBranchSelection" class="selectable hidden">
			<%  
				id=1;
				app.locals.videoA.each(function(video){ 
			 %>
			 <li id="<%= id %>" > 
				<a href="#" class="linkButton" ><img src="/image/A/<%= id %>A.png" /></a>
			 </li>
			<% 
				id++
				 });
			%>
			</ul>
		</div>
	</div>

	<!-- new media upload box -->
	<div title="Upload New Media" id="uploadPanel" class="hidden" >
		<div id="uploadBox">
				<label for="fileBox">Browse... </label>
				<input type="file" id="FileBox">
				<br />
				<label for="nameBox">Name: </label><input type="text" id="nameBox">
		</div>
	</div>
	<div id="videoNodeChart">
		// draw a branching chart of existing videos and their links, 
		// based on the number of existing json entries in public/tmp/
		// make it pretty and rounded and animated where possible.
	</div>

</div>

<script type="text/javascript" >
$(".selectable").selectable();
$("#videoListBox").accordion();

</script>

<script>

// //upload new video to server - this is a feature under development.
// $(document).on('click','#uploadButton', function (e) {
// 	console.log('upload clicked');
// 	var	fileSize
// 		, fileName
// 		, file
// 		, reader = new FileReader()
// 		;
	
// 	$('#fileBox').on('change', function(e) {
		
// 		fileName= $(this).val();
// 		fileSize = this.files[0].size;
// 		file = this.files[0];
		
// 		$('#nameBox').val(fileName);	
		
// 	});
	
	
// 	$('#uploadPanel').removeClass('hidden').dialog({
// 		modal:true,
// 		width:500,
// 		 buttons: [{
// 		 	text: "Cancel",
// 		 	click: function(){
// 				$(this).dialog("destroy");
// 				$('#uploadPanel').addClass('hidden');
// 				$('#fileBox').val('');
// 				$('#nameBox').val('');	
// 		 	}
// 		 	},
// 		 	{
// 		 	text: "Upload",
// 		 	click: function(){
		 					
// 		 	if ($('#fileBox').val() != "")
// 			 	{

				
// // 			 		reader.onload = function(evnt){
// // 						message('emitted \'' + JSON.stringify(evnt) + '\'');
// // 						socket.emit('Upload', { 'Name' : fileName, 'Data' : evnt.target.result });
// //       				}
// // 					
// // 					socket.emit('Start', { 'Name' : fileName, 'Size' : fileSize });
// // 					message('fileSize '+fileSize);
// // 					reader.readAsDataURL(file);
// // 					
// // 		 			$(this).dialog("destroy");
// // 				 	$('#uploadPanel').addClass('hidden');
// // 				 	$('#fileBox').val('');
// 			 	}
//  			else 
//  				{
//  				 $('#nameBox').val("Please choose a file.");
// 				}
				
// 		 	}
// 		 }]
// 	});

</script>