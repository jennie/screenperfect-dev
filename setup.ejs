<script src="/js/setup.js"></script>

<!-- main app canvas page 1 -->
<div id='canvas'>

	<!-- control panel -->
	<div id="videoListBox">
		<h3>Video List</h3>
		<div>
			<div class="buttonPanel">
				<button id="uploadButton" >Add Video</button>
			</div>
			<div class="imgGrid">
		<ul class="selectable">
		<%  
			id=1;
			app.locals.videoA.each(function(video){ 
			 %>
			 <li id="<%= id %>"> 
			 	<a href="#" class="videoListThumbnail"><img src="/image/A/<%= id %>A.png" /></a>
			 </li>
			<% 
			id++
			 });
		%>
		</ul>
			</div>
		</div>

		<h3>Hotspot Linking Tools</h3>
		<div>
			<div class="buttonPanel">		
			<button id="save">Save Hotspots</button>
			<button id="clear" >Clear Hotspots</button>
			</div>
		</div>
	</div> <!-- /videoListBox -->

</div><!-- /canvas -->

<!-- video selection dialog for linking hotspots -->
<div title="Select Next Video" id="dialog">
	<div class="imgGrid">
		<ul id="thumbnailsForBranchSelection" class="selectable hidden">
		<%  
			id=1;
			app.locals.videoA.each(function(video){ 
		 %>
		 <li id="<%= id %>" > 
			<a href="#" class="linkButton"><img src="/image/A/<%= id %>A.png" /></a>
		 </li>
		<% 
			id++
			 });
		%>
		</ul>
	</div>
</div>

<!-- new media upload box -->
<div title="Upload New Media" id="uploadPanel" class="hidden" >
	<div id="uploadBox">
			<label for="fileBox">Browse... </label>
			<input type="file" id="FileBox">
			<br />
			<label for="nameBox">Name: </label><input type="text" id="nameBox">
	</div>
</div>


<script type="text/javascript" >
$(".selectable").selectable();
$("#videoListBox").accordion();



$(function(){

// Draw hotspots on canvas to trace where the video should link to.
    var x1, y1;
    $("#canvas").mousedown(function (e) {
    	console.log(e.target);
        
        //detect if the click is on a close, delete the send hotspot box, return the click.
        if ($(event.target).hasClass("close") ) {
        	console.log('close');
        	$(event.target).parent().remove();
        	return false;
	    }

	    // On clicking an existing video hotspot, make a modal of available branch videos appear.
	    if ($(event.target).hasClass('send-video')) {

	    	console.log('add a video link here');
	    	console.log('send-video clicked');
	    // if (e.target !== this) return;
	    
	    var spot = $(event.target);
	    var nextVideoInBranch;
		console.log('send-video hotspot clicked');
		
		// Dialog of available videos
	    $('#dialog').dialog({
	        modal: true,
	        buttons: [{
	            text: "Save",
	            click: function () {
	                nextVideoInBranch = $('.ui-selected').attr('id');
	                $(spot).attr('nextVid', nextVideoInBranch)
	                $(".thumb", spot).html('<img src="/image/A/' + nextVideoInBranch +'A.png" />');
	                $(this).dialog("destroy");
	                $('#thumbnailsForBranchSelection').addClass('hidden');
	            }
	        }, {
	            text: "Cancel",
	            click: function () {
	                $(this).dialog("destroy");
	                $('#thumbnailsForBranchSelection').addClass('hidden');
	            }
	        }],
	        maxHeight: 500,
	        position: {
	            my: "center top",
	            at: "center top",
	            of: "#canvas"
	        }
	    });
		    $(event.target).attr('id', nextVideoInBranch);
		    $('#thumbnailsForBranchSelection').removeClass('hidden')
		    $('.ui-selectee').removeClass('ui-selected');
	    }

	    // begin drawing boxes for hotspots.
        if (e.target !== this) return; // if it's not over the canvas, don't do any of the following.
        console.log('mousedown on canvas detected');
        $("#current").attr({
            id: ''
        });

        var box = $('<div class="send-video" ><button class="close">X</button><div class="thumb">Click to set video.</div></div>');
        $(this).append(box);

        var parentOffset = $(this).parent().offset();
        x1 = e.pageX - parentOffset.left;
        y1 = e.pageY - parentOffset.top;

        box.attr({
            id: 'current'
        });

        box.css({
            top: y1, //offsets
            left: x1, //offsets
            background: '#FFF'
        });
    });

// when the mouse moves, extend the box.
    $("#canvas").mousemove(function (e) {
        var w = e.pageX - x1;
        var h = e.pageY - y1;
        $("#current").css({
            width: w, //offsets
            height: h, //offsets
        });
    });

// When the mouse stops moving, create the box
    $("#canvas").mouseup(function () {
        $("#current")
            .attr({
                id: ''
            });

    });
 
	//save spots to server json
	$('#save').click(function(e){
		var current = $(".fullscreen").attr("id");
		var links = [current];

		$(".send-video").each(function (index) {
			  var $video = $(this);
			
			  var obj = {
				id: $video.attr("id"),
				left: $video.offset().left,
				top: $video.offset().top,
				width: $video.width(),
				height: $video.height(),
				link: $video.attr("link")
		  };
		
		  links.push(obj);

		});
		
		message('emitted \'' + JSON.stringify(links) + '\'');
		socket.emit('setup event', links);
		
		return false;
	});

	//delete individual spots - controlled in sidebar
	$('.close').click(function () {
		console.log('close clicked');
	    $(this).parent().remove();
	    return false;
	});

	//clear all spots - controlled in sidebar
	$('#clear').click(function() {
		console.log('clear clicked');
	    $("div.send-video").remove();
	    return false; 
	});

});


//select a video from the thumbnail list of available videos in order to set spots on it
// $('a.videoListThumbnail').click(function(){
// 	console.log('new video added to canvas');
// 	// $('#canvas').append('ul-selected videoListThumbnail');
// });


</script>

<script>



// //upload new video to server - this is a feature under development.
// $(document).on('click','#uploadButton', function (e) {
// 	console.log('upload clicked');
// 	var	fileSize
// 		, fileName
// 		, file
// 		, reader = new FileReader()
// 		;
	
// 	$('#fileBox').on('change', function(e) {
		
// 		fileName= $(this).val();
// 		fileSize = this.files[0].size;
// 		file = this.files[0];
		
// 		$('#nameBox').val(fileName);	
		
// 	});
	
	
// 	$('#uploadPanel').removeClass('hidden').dialog({
// 		modal:true,
// 		width:500,
// 		 buttons: [{
// 		 	text: "Cancel",
// 		 	click: function(){
// 				$(this).dialog("destroy");
// 				$('#uploadPanel').addClass('hidden');
// 				$('#fileBox').val('');
// 				$('#nameBox').val('');	
// 		 	}
// 		 	},
// 		 	{
// 		 	text: "Upload",
// 		 	click: function(){
		 					
// 		 	if ($('#fileBox').val() != "")
// 			 	{

				
// // 			 		reader.onload = function(evnt){
// // 						message('emitted \'' + JSON.stringify(evnt) + '\'');
// // 						socket.emit('Upload', { 'Name' : fileName, 'Data' : evnt.target.result });
// //       				}
// // 					
// // 					socket.emit('Start', { 'Name' : fileName, 'Size' : fileSize });
// // 					message('fileSize '+fileSize);
// // 					reader.readAsDataURL(file);
// // 					
// // 		 			$(this).dialog("destroy");
// // 				 	$('#uploadPanel').addClass('hidden');
// // 				 	$('#fileBox').val('');
// 			 	}
//  			else 
//  				{
//  				 $('#nameBox').val("Please choose a file.");
// 				}
				
// 		 	}
// 		 }]
// 	});

</script>